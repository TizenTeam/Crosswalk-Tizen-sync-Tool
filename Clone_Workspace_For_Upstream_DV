#!/bin/bash
#
# Copyright 2014, Eurogiciel Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# native
#

UPSTREAM_SRC=${PWD}
TIZEN_DST=${PWD}/Tizen_Crosswalk
ROOTDIR=${PWD}

###
### Functions ###
###

# Description:
#  Script helper informations for script usage
# Args:
#  None
function usage {
  echo "$0 script make snapshot of XWalk project source tree"
  echo "for delivery on Tizen.org with GBS constraints (git submodules not handled)"
  echo ""
  echo "Usage:"
  echo "  $0 [Upstream Xwalk root dir] [Snapshot Destination Dir]"
  echo "    \$1: Upstream Root dir. (should contain \$1/src/xwalk subdirs)"
  echo "    \$2: Snapshot destination dir. (git repo cloned from Tizen.org crosswalk project)"
  echo ""
  echo "Args are optional. Default path tree are :"
  echo "  \$1 is ${UPSTREAM_SRC}"
  echo "  \$2 is ${TIZEN_DST}"
}

# Description:
#  Launch Rsync to perform the upstream tree snapshot for delivery on Tizen.org
# Args :
#  $1: XWalk src/ directory
#  $2: Snapshot destination directory
function snapshot_with_rsync {
  [ $# != 2 ] && {
    echo "${FUNCNAME}(): Not enough args"
    exit 1
  }

  [ -d $1/xwalk ] || {
    echo "${FUNCNAME}(): Wrong path \$1"
    exit 1
  }

  mkdir -p $2

  echo "Will sync following dirs:"
  echo " Xwalk src dir = $1"
  echo " Tizen.org dest dir = $2"
  echo ""
  echo "rsync in progress:"
  time rsync -a --delete --force --delete-excluded --exclude '.git*' --exclude '.svn' $1 $2
  echo ""
  echo "done."

  #Import packging (gbs do not allow link.)
  if [ -d $1/xwalk/packaging ]; then
    rm -rf $2/packaging
    mkdir -p $2/packaging
    cp -a $1/xwalk/packaging/* $2/packaging/
    rm -f $2/packaging/gbp*
  else
    echo "Warning: packaging directory not found in upstream tree. Ignoring sync in destination dir"
  fi
}

###
### Script entry point ###
###

# set -x

# Arguments check
[ $# == 1 ] && {
  case "$1" in
    *)
      echo "Not enough arguments."
      echo ""
      usage
      exit 1
      ;;
    "-h") usage;;
    "-help") usage;;
    "--help") usage;;
  esac

  exit 0
}

[ $# == 2 ] && {
  UPSTREAM_SRC=$1
  TIZEN_DST=$2
}

# Check tools presence
which rsync > /dev/null || { echo "Error: Rsync is not installed. Please install it before using this script." ; exit 1; }

# Check source directory presence
[ -d ${UPSTREAM_SRC}/src/xwalk ] || {
  echo "Error: Xwalk upstream directory ${UPSTREAM_SRC}/src/xwalk not found. Stopping."
  exit 1
}

echo "-------- Prepare upstream snapshot"
snapshot_with_rsync ${UPSTREAM_SRC}/src ${TIZEN_DST}
echo ""

# Display some informations:
echo "Source code as been duplicated in ${TIZEN_DST}"
echo "Here are some tips for next steps :"
echo ""
echo "First go to dest dir:"
echo "   cd ${TIZEN_DST}"
echo "You can see changes using:"
echo "   git status"
echo "You can stage all changes:"
echo "   git add -u"
echo "   git add ."
echo "You can commit changes adding a message refering to upstream version:"
echo ""
VERSION_FILE=${TIZEN_DST}/src/xwalk/VERSION
UPSTREAM_COMMITID=$(cd ${UPSTREAM_SRC}/src/xwalk; git log | head -1 | cut -d ' ' -f 2 -; cd ${OLDPWD}; )
[ -f ${VERSION_FILE} ] && {
  #cat ${VERSION_FILE}
  MAJOR_V=$(grep MAJOR ${VERSION_FILE} | cut -d '=' -f 2 -)
  MINOR_V=$(grep MINOR ${VERSION_FILE} | cut -d '=' -f 2 -)
  BUILD_V=$(grep BUILD ${VERSION_FILE} | cut -d '=' -f 2 -)
  PATCH_V=$(grep PATCH ${VERSION_FILE} | cut -d '=' -f 2 -)
  echo "   git commit -sm \"Upstream version ${MAJOR_V}.${MINOR_V}.${BUILD_V}.${PATCH_V}"
  echo ""
  echo "Upstream commit-id ${UPSTREAM_COMMITID}\""
}
echo ""
#echo "Finally, you will be ready for push on GitHub:"
#echo "  TODO:git push "
echo "Or on Tizen.org:"
echo "  git push origin HEAD:refs/for/master"

exit 0
#################################################################

