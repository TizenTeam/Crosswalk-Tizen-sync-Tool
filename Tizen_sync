#!/bin/bash
#
# Copyright 2013, Intel Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# native
#
#Created on  06 fevr. 2014
#
#@author: ronan.lemartret@open.eurogiciel.org
#

#This should fetch Crosswalk into src/xwalk and generate a
#   .gclient-xwalk with the other dependencies.


### Vars ###
UPSTREAM_SRC=${PWD}
LOGFILE=${PWD}/.Tizen_sync.log


### Functions ###

# Remove existing log file.
function drop_logs {
  [ ! -f ${LOGFILE} ] || rm ${LOGFILE}
}

# Launch a command line and catch stdio & stderr output in a log file.
function process_and_logs {
  [ $# -eq 0 ] || {
    retval=0

    if [ "$1" != "echo" ]; then
      echo "  $ "$* | tee -a ${LOGFILE}
    fi

    if [ "$1" == "cd" ]; then
      $* 2>&1
      retval=$?
    else
      $* 2>&1 | tee -a ${LOGFILE}
      retval=${PIPESTATUS[0]}
    fi

    return ${retval}
  }
}

function restore_gclient_orig {
  # TODO: use git instead.
  [ -f .gclient.orig ] && {
    process_and_logs mv .gclient.orig .gclient
  }
}


### Script entry point ###
SCRIPTROOTDIR=${PWD}

which svn > /dev/null || { echo "Subversion is not installed. Please install it before using this script." ; exit 1; }

drop_logs

# Script can be called with commit-id (in arg 1) to prepare Tizen.org delivery. Some developpers stuffs are not done in this mode.
commitid=""
if [ $# -gt 0 ]; then
  commitid=$1
  process_and_logs echo "Info: Argument passed: script is in use for Tizen.org delivery"
  process_and_logs echo "commit-id: ${commitid}"
fi

process_and_logs mkdir -p ${UPSTREAM_SRC}

# Catch GClient
[ -d depot_tools ] || process_and_logs git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
process_and_logs cd depot_tools
process_and_logs git pull origin master
process_and_logs cd ..

PATH=$PWD/depot_tools:$PATH

restore_gclient_orig

# if project already downloaded, catch latest upstream version
[ -d ${UPSTREAM_SRC}/src/xwalk ] && {
  echo "Upstream project already present in local dir:"
  if [ -z ${commitid} ]; then
    process_and_logs echo "Aligning on remote/origin/master"
    process_and_logs cd ${UPSTREAM_SRC}/src/xwalk
    process_and_logs git pull origin master
    process_and_logs git checkout master
    process_and_logs git reset --keep origin/master
  else
    process_and_logs cd ${UPSTREAM_SRC}/src/xwalk
    process_and_logs git fetch --all -p origin master
    process_and_logs cd ${OLDPWD}
    process_and_logs echo "Aligning on ${commitid}"
    process_and_logs cp .gclient .gclient.orig
    process_and_logs echo "  $ sed \"s|origin/master|${commitid}|\" .gclient.orig \> .gclient"
    sed "s|origin/master|${commitid}|" .gclient.orig > .gclient
#    process_and_logs cd ${UPSTREAM_SRC}/src/xwalk
#    process_and_logs git checkout ${commitid} || { echo "Error: Aligning on ${commitid} failed! Abording."; exit 1; }
#    process_and_logs git reset --hard
# f4033cf56f73b642defa0c2f7784732bafb28fd7
#    process_and_logs git 
  fi
}

# Catch Crosswalk upstream project
process_and_logs cd ${UPSTREAM_SRC}
process_and_logs gclient sync -v

#This will fetch all the other source files but not run any hooks.
process_and_logs gclient sync -v --gclientfile=.gclient-xwalk --nohooks

#Generate the LASTCHANGE files.
source_root=$(pwd)
process_and_logs python $source_root/src/build/util/lastchange.py \
       -o $source_root/src/build/util/LASTCHANGE \
       -s $source_root/src

process_and_logs python $source_root/src/build/util/lastchange.py \
       -o $source_root/src/build/util/LASTCHANGE.blink \
       -s $source_root/src/third_party/WebKit

#process_and_logs cd $SCRIPTROOTDIR

restore_gclient_orig

# Add remote for Eurogiciel-OSS GitHub forked projects.
if [ -d ${UPSTREAM_SRC}/src/third_party/WebKit ]; then
  process_and_logs cd ${UPSTREAM_SRC}/src/third_party/WebKit
  git remote show eurogiciel &> /dev/null || process_and_logs git remote add eurogiciel git@github.com:eurogiciel-oss/blink-crosswalk.git
  process_and_logs git fetch eurogiciel
else
  process_and_logs echo "Error: ${UPSTREAM_SRC}/src/third_party/WebKit not found !"
  process_and_logs echo "  There may be an issue while retriving the source tree"
fi

if [ -d ${UPSTREAM_SRC}/src/xwalk ]; then
  process_and_logs cd ${UPSTREAM_SRC}/src/xwalk
  git remote show eurogiciel &> /dev/null || process_and_logs git remote add eurogiciel git@github.com:eurogiciel-oss/crosswalk.git
  process_and_logs git fetch eurogiciel
else
  process_and_logs echo "Error: ${UPSTREAM_SRC}/src/xwalk not found !"
  process_and_logs echo "  There may be an issue while retriving the source tree"
fi

if [ -d ${UPSTREAM_SRC}/src ]; then
  process_and_logs cd ${UPSTREAM_SRC}/src
  git remote show eurogiciel &> /dev/null || process_and_logs git remote add eurogiciel git@github.com:eurogiciel-oss/chromium-crosswalk.git
  process_and_logs git fetch eurogiciel
else
  process_and_logs echo "Error: ${UPSTREAM_SRC}/src not found !"
  process_and_logs echo "  There may be an issue while retriving the source tree"
fi

process_and_logs cd $SCRIPTROOTDIR

echo ""
echo "Upstream sync finished. Please refer to log file for details and check for errors:"
echo "   "${LOGFILE}
echo ""
echo "Note for developpers: to build xwalk, you can perform:"
echo "   cd ${UPSTREAM_SRC}/src/xwalk"
echo "   gbs build --include-all -A x86_64 -P generic-x86_64 --define 'BUILDDIR_NAME /var/tmp/xwalk-build' -C"
echo ""
echo "Example of environment cloning for Tizen.org delivery:"
echo "   ./Clone_Workspace_For_Upstream_DV \$PWD \$PWD/Tizen_Crosswalk-tizen.org"

exit 0
#################################################################

